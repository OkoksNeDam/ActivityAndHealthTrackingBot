from aiogram import Router
from aiogram.filters import Command, CommandObject
from aiogram.types import Message
from datetime import datetime
from app.utils.utils import calc_water_intake

from app.database.requests import user_water_consumption_requests
from app.database.requests import user_health_status_requests

water_consumption_router = Router()


@water_consumption_router.message(Command("log_water"))
async def log_water(message: Message, command: CommandObject):
    await user_water_consumption_requests.set_water_consumption(tg_id=message.from_user.id,
                                                                n_liters=float(command.args),
                                                                date=datetime.now())
    await message.answer("–î–∞–Ω–Ω—ã–µ –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã, —Å–ø–∞—Å–∏–±–æ!")
    today_health_status_list = await user_health_status_requests.get_health_status(tg_id=message.from_user.id,
                                                                                   date=datetime.now())
    today_health_status_list = list(today_health_status_list)
    if not today_health_status_list:
        await message.answer("–î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≥–æ, —Å–∫–æ–ª—å–∫–æ –æ—Å—Ç–∞–ª–æ—Å—å –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–æ—Ä–º—ã, –¥–æ–±–∞–≤—å—Ç–µ"
                             "–∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–¥–æ—Ä–æ–≤—å–µ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /set_health_status")
    else:
        user_latest_health_status = today_health_status_list[-1]
        today_water_consumption = \
            await user_water_consumption_requests.get_total_water_consumption(tg_id=message.from_user.id,
                                                                              date=datetime.now())
        required_water_amount = calc_water_intake(weight=user_latest_health_status.weight,
                                                  activity_level=user_latest_health_status.activity_level,
                                                  city=user_latest_health_status.city)
        await message.answer(f"üìä –ü—Ä–æ–≥—Ä–µ—Å—Å:"
                             f"\n–í—ã–ø–∏—Ç–æ: {today_water_consumption} –ª."
                             f"\n–ù–æ—Ä–º–∞: {round(required_water_amount, 2)} –ª.")
